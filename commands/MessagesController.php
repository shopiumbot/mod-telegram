<?php

namespace shopium\mod\telegram\commands;

use core\modules\user\models\User;
use Longman\TelegramBot\Request;
use shopium\mod\telegram\components\Api;
use yii\console\Controller;
use Yii;
class MessagesController extends Controller
{
    public function beforeAction2($action)
    {
        $langManager = Yii::$app->languageManager;
        Yii::$app->language = (isset($langManager->default->code)) ? $langManager->default->code : Yii::$app->language;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionGetUpdates()
    {
        $bot_api_key = '';
        $bot_username = '';

        $admin_users = [
            812367093,
        ];

        $basePath = \Yii::$app->getModule('telegram')->basePath;
        $commands_paths = [
            realpath($basePath . '/components/Commands') . '/SystemCommands',
            realpath($basePath . '/components/Commands') . '/AdminCommands',
            realpath($basePath . '/components/Commands') . '/UserCommands',
        ];
        $db = Yii::$app->db;
        //$login = Yii::$app->user->loginById(Yii::$app->params['client_id']);
        $user = User::findOne(Yii::$app->params['client_id']);

        try {
            while (true) {

                sleep(2);
                // Create Telegram API object
                $telegram = new Api($user->token);

                // Add commands paths containing your custom commands
                $telegram->addCommandsPaths($commands_paths);

                // Enable admin users
                $telegram->enableAdmins($admin_users);

                // Enable MySQL
               // $telegram->enableMySql($mysql_credentials);
                $telegram->enableExternalMySql($db->pdo, $db->tablePrefix . 'telegram__');
                // Logging (Error, Debug and Raw Updates)
                // https://github.com/php-telegram-bot/core/blob/master/doc/01-utils.md#logging
                //
                // Set custom Upload and Download paths
                $telegram->setDownloadPath(Yii::getAlias('@app/web/downloads/telegram'));
                $telegram->setUploadPath(Yii::getAlias('@uploads/telegram'));

                // Here you can set some command specific parameters
                // e.g. Google geocode/timezone api key for /date command
                //$telegram->setCommandConfig('date', ['google_api_key' => 'your_google_api_key_here']);

                // Requests Limiter (tries to prevent reaching Telegram API limits)
                $telegram->enableLimiter();

                // Handle telegram getUpdates request
                $server_response = $telegram->handleGetUpdates();


                //$telegram->executeCommand('/echo ff');


                if ($server_response->isOk()) {
                    $update_count = count($server_response->getResult());
                    echo date('Y-m-d H:i:s', time()) . ' - Processed ' . $update_count . ' updates' . PHP_EOL;
                } else {
                    echo date('Y-m-d H:i:s', time()) . ' - Failed to fetch updates' . PHP_EOL;
                    echo $server_response->printError();
                }
            }
        } catch (\Longman\TelegramBot\Exception\TelegramException $e) {
            echo $e->getMessage();
            // Log telegram errors
            \Longman\TelegramBot\TelegramLog::error($e);
        } catch (\Longman\TelegramBot\Exception\TelegramLogException $e) {
            // Catch log initialisation errors
            echo $e->getMessage();
        }

    }
}
